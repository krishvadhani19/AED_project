/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CaseManagerRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Magic.Design.*;
import Business.Organization.LogisticsOrganization;
import Business.Organization.Organization;
import Business.People.Patient;
import Business.Requests.PatientRequest;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.System_Coordinator_Test_WorkRequest;
import Business.WorkQueue.WorkRequest;
import Magic.Design.MyJButton;
import Magic.Design.MyTableFormat;
import java.awt.Color;
import java.awt.Image;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author jared
 */
public class PrepareOrderDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form VolunteerReceiverRequestJPanel
     */
    private  EcoSystem system;
    private PatientRequest patientRequest;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private UserAccount userAccount;
    private Network network;
    
    public PrepareOrderDetailsJPanel(EcoSystem system, UserAccount userAccount, Network network) {
        initComponents();
        this.system = system;
        this.userAccount = userAccount;
        this.network = network;
        requestTable.getTableHeader().setDefaultRenderer(new MyTableFormat());
        populateRequestTable();
    }
  

    private void populateRequestTable(){
        DefaultTableModel dtm = (DefaultTableModel) requestTable.getModel();
        
        dtm.setRowCount(0);
        
         for(PatientRequest patientRequest: system.getPatientRequestDirectory().getPatientRequestList()){            
            Object row[] = new Object[4];
            row[0]= patientRequest;
            row[1]= patientRequest.getName();
            row[2]= patientRequest.getContact();
            row[3]= patientRequest.getStatus();
              
            dtm.addRow(row);
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonFinalize = new javax.swing.JButton();
        buttonSendForFunding = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        uidText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        contactText = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        bloodTypeText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        labConfirmationText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        statusText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        buttonIssue = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        buttonTrackBlood = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 153, 153));
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setPreferredSize(new java.awt.Dimension(1150, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonFinalize.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        buttonFinalize.setText("Finalize");
        buttonFinalize.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonFinalize.setEnabled(false);
        buttonFinalize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFinalizeActionPerformed(evt);
            }
        });
        add(buttonFinalize, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 470, 180, 40));

        buttonSendForFunding.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        buttonSendForFunding.setText("Send for Funding");
        buttonSendForFunding.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonSendForFunding.setEnabled(false);
        buttonSendForFunding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSendForFundingActionPerformed(evt);
            }
        });
        add(buttonSendForFunding, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 290, 180, 40));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel6.setText("UID");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, -1, -1));

        uidText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(uidText, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 180, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel3.setText("Options:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 250, -1, -1));

        nameText.setEditable(false);
        nameText.setBackground(new java.awt.Color(255, 255, 255));
        nameText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(nameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 260, 190, -1));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel16.setText("Contact");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, -1, -1));

        contactText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        contactText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactTextActionPerformed(evt);
            }
        });
        add(contactText, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 180, -1));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel17.setText("Email");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 320, -1, -1));

        emailText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(emailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 310, 190, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel10.setText("Blood Type");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 370, -1, -1));

        bloodTypeText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        bloodTypeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodTypeTextActionPerformed(evt);
            }
        });
        add(bloodTypeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, 190, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 620, -1, -1));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel19.setText("Meets Reqs for Blood Donation?");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 570, -1, -1));

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Prepare Order Details");
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 973, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(535, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1580, -1));

        labConfirmationText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(labConfirmationText, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 560, 200, -1));

        requestTable.setBackground(new java.awt.Color(0, 0, 0));
        requestTable.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        requestTable.setForeground(new java.awt.Color(255, 255, 255));
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UID", "Name", "Contact", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTable.setFocusable(false);
        requestTable.setGridColor(new java.awt.Color(0, 0, 0));
        requestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                requestTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(requestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 980, 130));

        statusText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        add(statusText, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 510, 200, -1));

        jLabel1.setText("Status");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 11, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel2.setText("Status");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 520, -1, -1));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 470, 860, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        jLabel4.setText("Patient History Details");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 480, -1, -1));

        buttonIssue.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        buttonIssue.setText("Issue");
        buttonIssue.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonIssue.setEnabled(false);
        buttonIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIssueActionPerformed(evt);
            }
        });
        add(buttonIssue, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 350, 180, 40));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 270, -1, -1));

        buttonTrackBlood.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        buttonTrackBlood.setText("Track Blood");
        buttonTrackBlood.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonTrackBlood.setEnabled(false);
        buttonTrackBlood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTrackBloodActionPerformed(evt);
            }
        });
        add(buttonTrackBlood, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 410, 180, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSendForFundingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSendForFundingActionPerformed
        // TODO add your handling code here:
        if( !statusText.getText().equals("New Request"))
            {
                JOptionPane.showMessageDialog(null, new JLabel(  "<html><b>Request can not be approved!</b></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
            }
        
        else
        {
        
        Patient patient = new Patient();
        
        try {

            patient.setBloodType(system.getPersonBloodTypes().findBloodType(bloodTypeText.getText()));
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, new JLabel("<html><b>Please check the patients blood group. It Should be AN,AP,BP,BN,ABP,ABN,OP,ON where N-Negative, P-Positive.</b></html>"), "Warning", JOptionPane.WARNING_MESSAGE);

            return;
        }
        
        patient.setName(nameText.getText());
        patient.setContact(Long.parseLong(contactText.getText()));  
        
        patient.setReceiverID(uidText.getText()); // UID, receiverID
        patient.setName(nameText.getText()); // Name
       
        patient.setContact(Long.parseLong(contactText.getText())); // contact
        patient.setEmailID(emailText.getText()); // emailID
        patient.setStatus("Centre Approved"); // status
        patient.setLabConfirmation(true); //  labConfirmation
        system.getPatientDirectory().addPatient(patient);
      
        
        for(PatientRequest patientRequest: system.getPatientRequestDirectory().getPatientRequestList()){                      
        
            if(patientRequest.getReceiverID().equals(uidText.getText())){
            patientRequest.setStatus("Centre Approved");
            dB4OUtil.storeSystem(system);
            }
        }
       
        Enterprise ent = null;
        Organization org = null;
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise.getEnterpriseType().toString().equals("Legal")) {
            
                ent = enterprise;
                System.out.println(enterprise);
                break;
            }
        }
        
        
       
        for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()) {
            if(organization instanceof LogisticsOrganization) {
                org = organization;
                break;
            }
        }
        
        if (org != null) {
            // WORK REQUEST
        
            WorkRequest request = new System_Coordinator_Test_WorkRequest();

            request.setPatient(patient);
            request.setActionDate(new Date());
            request.setAssigned("Legal Department");
            request.setSummary("Requested for BoneMarrow Reception");
            request.setStatus("Assigned to Legal Department");

            request.setUserAccount(userAccount);
            org.getWorkQueue().getWorkRequestList().add(request);
            System.out.println(org.getName());
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            //user.addUserRequest(request);
            
            dB4OUtil.storeSystem(system);
            populateRequestTable();
            JOptionPane.showMessageDialog(null, new JLabel(  "<html><b>Request approved successfully!</b></html>"));
            statusText.setText("Centre Approved");
           
            //JOptionPane.showMessageDialog(null,"Request Sent Successfully", "Info", JOptionPane.INFORMATION_MESSAGE);
            
        } else {
        
         JOptionPane.showMessageDialog(null, "No organization present", "Error", JOptionPane.ERROR_MESSAGE);
         return;
        }

        
        dB4OUtil.storeSystem(system);
        populateRequestTable();
      //  JOptionPane.showMessageDialog(null,"New patient has been added!");
        
        }
    }//GEN-LAST:event_buttonSendForFundingActionPerformed

    private void buttonFinalizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFinalizeActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_buttonFinalizeActionPerformed

    private void contactTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactTextActionPerformed

    private void requestTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestTableMousePressed
        int selectedRow = requestTable.getSelectedRow();
        if(selectedRow < 0){
        }
        else{
       //display the details 
            patientRequest = (PatientRequest) requestTable.getValueAt(selectedRow, 0);
            populateRequestDetails(patientRequest);
            buttonSendForFunding.setEnabled(true);
            buttonFinalize.setEnabled(true);

            if(labConfirmationText.getText().equals("false"))
            {
                labConfirmationText.setBorder(BorderFactory.createLineBorder(Color.RED));
                labConfirmationText.setForeground(Color.red);
            }
            if(patientRequest.getStatus().equals("New Request")){
                buttonSendForFunding.setEnabled(true);
                buttonFinalize.setEnabled(true);
            }
            else {
                buttonSendForFunding.setEnabled(false);
                buttonFinalize.setEnabled(false);
            }
            
            
             dB4OUtil.storeSystem(system);
            
            
        }
    }//GEN-LAST:event_requestTableMousePressed

    private void bloodTypeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodTypeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodTypeTextActionPerformed

    private void buttonIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIssueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonIssueActionPerformed

    private void buttonTrackBloodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTrackBloodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonTrackBloodActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bloodTypeText;
    private javax.swing.JButton buttonFinalize;
    private javax.swing.JButton buttonIssue;
    private javax.swing.JButton buttonSendForFunding;
    private javax.swing.JButton buttonTrackBlood;
    private javax.swing.JTextField contactText;
    private javax.swing.JTextField emailText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField labConfirmationText;
    private javax.swing.JTextField nameText;
    private javax.swing.JTable requestTable;
    private javax.swing.JTextField statusText;
    private javax.swing.JTextField uidText;
    // End of variables declaration//GEN-END:variables

    private void populateRequestDetails(PatientRequest patientRequest) {
            uidText.setText(patientRequest.getReceiverID());
            nameText.setText(patientRequest.getName());
            bloodTypeText.setText(patientRequest.getBloodType().toString());
            contactText.setText(String.valueOf(patientRequest.getContact()));
            emailText.setText(patientRequest.getEmailID());
            statusText.setText(patientRequest.getStatus());
            
            labConfirmationText.setText(String.valueOf(patientRequest.isLabConfirmation()));
             
            uidText.setEditable(false);
            nameText.setEditable(false);
            bloodTypeText.setEditable(false);
            contactText.setEditable(false);
            emailText.setEditable(false);
            statusText.setEditable(false);
            labConfirmationText.setEditable(false);     
    }
}
